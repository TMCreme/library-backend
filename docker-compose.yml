---
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DEV=true
    ports:
      - "8091:8000"
    volumes:
      - ./:/app
      - STATIC_DIR:/vol/web
      # - ./log:/var/log
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=librarypass
      - DEBUG=1
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    ports:
      - "5454:5432"
    volumes:
      - library-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=librarypass
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U devuser -d postgres"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

volumes:
  library-data:
  STATIC_DIR:

